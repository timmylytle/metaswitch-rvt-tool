package com.Metaswitch.MVS.Corba;


/**
* com/Metaswitch/MVS/Corba/_SEAccessFactoryInterfaceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from SEAccessFactoryInterface.idl
* Thursday, June 18, 2020 8:33:03 PM CDT
*/

public class _SEAccessFactoryInterfaceStub extends org.omg.CORBA.portable.ObjectImpl implements com.Metaswitch.MVS.Corba.SEAccessFactoryInterface
{


  /**
     * Each invocation of createsSEAccess returns an identical, generic
     * SEAccessInterface instance; this instance only becomes associated with a
     * specific SE as a result of subsequent method invocations on the
     * SEAccessInterface.  The client application is obliged to call the destroy
     * method on the SEAccessInterface when it has finished using it.
     *
     * @return SEAccessInterface instance.
     *
     * @throws ElementOperationFailedException  If the request failed for any
     *   reason, for example if the EMS Server does not have enough memory to
     *   complete the request.  See SEExceptions.idl.
     */
  public com.Metaswitch.MVS.Corba.SEAccessInterface createSEAccess () throws com.Metaswitch.MVS.Corba.ElementOperationFailedException
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createSEAccess", true);
                $in = _invoke ($out);
                com.Metaswitch.MVS.Corba.SEAccessInterface $result = com.Metaswitch.MVS.Corba.SEAccessInterfaceHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:ElementOperationFailedException:1.0"))
                    throw com.Metaswitch.MVS.Corba.ElementOperationFailedExceptionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createSEAccess (        );
            } finally {
                _releaseReply ($in);
            }
  } // createSEAccess

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:SEAccessFactoryInterface:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _SEAccessFactoryInterfaceStub
